name: Audit and Test

on:
  push:
    branches:
      - '*'
      - '**/*'
  # NOTE: you don't need to build all PRs if you are also building all branches
  # pull_request:
  #   branches:
  #     - '*'
  #     - '**/*'
jobs:
  build:
    runs-on: ubuntu-18.04
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x
    - name: Set up dependancies
      env:
        DATABASE_WAREHOUSE_DB_TEST: test_hmis_warehouse
      run: |
        pg_isready -h postgres

        sudo apt-get update

        sudo apt-get install \
          redis-server \
          libmagic-dev \
          libpq-dev

        # echo Updating the postgresql port which is needed if multiple versions installed
        # sudo sed -i.bak -e 's/5433/5432/' /etc/postgresql/11/main/postgresql.conf

        # echo Restarting postgres
        # sudo systemctl restart postgresql
        # netstat -an

        # sudo -upostgres createuser -h postgres -p 5432 --echo --superuser $USER #give the runner
        # createdb -p 5432 --echo
        # createdb -p 5432 $DATABASE_WAREHOUSE_DB_TEST

        gem uninstall -v '>= 2' -i $(rvm gemdir)@global -ax bundler || true
        gem install bundler -v '< 2'
    - name: 'Install gems'
      run: |
        bundle install --jobs 4 --retry 3
    - name: Run bundle-audit
      run: |
        bundle exec bundle-audit check --update --ignore CVE-2019-16676 CVE-2017-1002201
    - name: Run brakeman
      run: |
        bundle exec brakeman -q --ensure-latest --no-pager --except PermitAttributes,Render
    - name: 'App setup'
      run: |
        cp config/secrets.yml.sample config/secrets.yml
        mkdir app/assets/stylesheets/theme/styles
        touch app/assets/stylesheets/theme/styles/_variables.scss
        cp .rspec.travis .rspec
    - name: Prepare test db
      env:
        RAILS_ENV: test
        DATABASE_ADAPTER: postgresql
        DATABASE_DB_TEST: boston_cas_test
        DATABASE_HOST: postgres
        DATABASE_USER: postgres
        DATABASE_PASS: postgres
        DEFAULT_FROM: greenriver.testing@mailinator.com
        DATABASE_WAREHOUSE_DB_TEST: boston_cas_test
        HOSTNAME: openpath.host
        PORT: 80
      run: |
        bundle exec rake db:drop db:create db:schema:load
    - name: Run tests
      env:
        RAILS_ENV: test
        DATABASE_ADAPTER: postgresql
        DATABASE_DB_TEST: boston_cas_test
        DATABASE_HOST: postgres
        DATABASE_USER: postgres
        DATABASE_PASS: postgres
        DEFAULT_FROM: greenriver.testing@mailinator.com
        DATABASE_WAREHOUSE_DB_TEST: boston_cas_test
        HOSTNAME: openpath.host
        PORT: 80
      run: |
        bundle exec rspec
