.d-flex.justify-content-end
  - if can_add_vacancies?
    = link_to new_opportunity_path, class: 'btn btn-primary pull-right margin-bottom-02' do
      %span.icon-plus
      Submit a Vacancy

- if show_match_status_facet_nav?
  %ul.nav.nav-tabs
    %li.nav-item{role: "presentation", class: ('active' if controller_path == 'active_matches')}
      = link_to 'Matches in Progress', active_matches_path, class: 'nav-link'
    %li.nav-item{role: "presentation", class: ('active' if controller_path == 'closed_matches')}
      = link_to 'Closed Matches', closed_matches_path, class: 'nav-link'

.row
  .col-sm-12
    %h1= @heading
    = render 'help_text'
  - @prompt = t '.search_prompt'

.row
  .col-sm-4
    = render 'search_form', tooltip: 'Search with PersonalID or full or partial "first last" or "last, first" for more specific results'

  .col-sm-8.sort-filter.d-flex
    = render 'filter', available_steps: @available_steps, return_path: active_matches_path, label_method: :active, available_routes: @available_routes
    = render 'sort', sort_options: @sort_options
    = render 'show_confidential_names'

= render 'tabs', available_routes: @available_routes, current_tab: @current_route_name
.row
  .col-sm-4
    %p= page_entries_info @opportunities
  .col-sm-4
    %p.client__current-sort-filter
      Currently sorted by:
      %strong= @sort_options.select{|m| m[:column] == @column && m[:direction] == @direction}.first[:title]
  .col-sm-4
    - if @active_filter
      - step_name = if @current_step.present? then @available_steps.to_h.invert[@current_step] else nil end
      - program_name = if @current_program.present? then @available_programs.index_by(&:id)[@current_program.to_i]&.name else nil end
      - contact_name = if @current_filter_contact.present? then Contact.find(@current_filter_contact).name else nil end
      - contact_type = if @current_contact_type.present? then Contact::label_for(@current_contact_type)&.gsub("Contacts", "Contact") else 'Contact' end
      - contact_type = "Has #{contact_type}" if contact_type.present? && !contact_name.present?
      - program_filters = [step_name, program_name].compact.join(' at ')
      - contact_filters = [contact_type, contact_name].compact.join(': ')
      %p.client__current-sort-filter
        Limited to:
        %strong= simple_format([program_filters, contact_filters].filter(&:presence).join(',<br />'), {}, wrapper_tag: 'span')

%p= paginate @opportunities, params: {sort: @column, direction: @direction}
= render 'matches/list', opportunities: @opportunities_array, match_type: 'active'
%p= paginate @opportunities, params: {sort: @column, direction: @direction}
