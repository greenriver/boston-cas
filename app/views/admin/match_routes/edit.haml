- title = "Edit #{@route.title}"
- content_for :title, title
%h1= content_for :title
= simple_form_for @route, as: :match_route, url: admin_match_route_path(@route) do |f|
  = f.input :active
  = f.input :housing_type, collection: @route.housing_types, include_blank: 'None', input_html: { class: :select2 }
  = f.input :contacts_editable_by_hsa, label: 'HSA can edit HSA contacts'
  = f.input :send_notifications, label: 'Send emails to contacts'
  = f.input :should_activate_match, label: 'Activate highest priority match automatically'
  = f.input :allow_multiple_active_matches, label: 'Allow multiple active matches on single opportunity'
  = f.input :should_cancel_other_matches, label: 'Cancel other matches on success'
  = f.input :should_prevent_multiple_matches_per_client, label: 'Prevent multiple active matches per client on route'
  = f.input :default_shelter_agency_contacts_from_project_client, label: 'Attempt to add default shelter agency contacts from client record'
  = f.input :show_default_contact_types, label: 'Show the default contact types on a match'
  = f.input :send_notes_by_default, label: 'Include note content by default'
  = f.association :match_prioritization, collection: MatchPrioritization::Base.prioritization_schemes.map {|prioritization_scheme| [prioritization_scheme.title, prioritization_scheme.first.id]}, label_method: :first, value_method: :second, include_blank: false, input_html: { class: :select2 }
  = f.input :stalled_interval, collection: @route.stall_intervals, label: "Days until a match is considered stalled", input_html: { class: :select2 }
  = f.association :tag, include_blank: 'Optional Tag', input_html: { class: :select2 }, hint: 'Assigning a tag is required if the route is prioritized by rank.'
  = f.button :submit, value: "Update #{@route.title}"


= render 'init_select2'
