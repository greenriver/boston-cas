- title = "Match Routes"
- content_for :title, title

= render 'menus/admin_tabs'

%h1= content_for :title

%h2 Settings
.well.p-0
  .overflow-x-scroll{style: "height: 800px"}
    %table.table.table-fixed.table-striped
      %thead
        %tr
          %th Route Name
          %th Active
          %th Housing Type
          %th HSA can edit HSA contacts
          %th Send email to contacts
          %th Activate highest priority match automatically
          %th Allow multiple active matches on single opportunity
          %th Cancel other matches on success
          %th Allow multiple active matches per client on route
          %th Attempt to add default shelter agency contacts from client record
          %th Match prioritization
          %th Show the default contact types on a match
          %th Stall days
          %th Include note content by default
          %th Expects ROI
          %th= _('Tag')

      %tbody
        - @routes.each do |route|
          %tr
            %td= link_to route.title, edit_admin_match_route_path(route)
            %td= checkmark route.active
            %td= route.housing_type
            %td= checkmark route.contacts_editable_by_hsa
            %td= checkmark route.send_notifications
            %td= checkmark route.should_activate_match
            %td= checkmark route.allow_multiple_active_matches
            %td= checkmark route.should_cancel_other_matches
            %td= checkmark(! route.should_prevent_multiple_matches_per_client)
            %td= checkmark(route.default_shelter_agency_contacts_from_project_client)
            %td= route.match_prioritization.title
            %td= checkmark(route.show_default_contact_types)
            %td
              - if route.stalled_interval > 0
                = route.stalled_interval
            %td= checkmark(route.send_notes_by_default)
            %td= checkmark(route.expects_roi)
            %td= route.tag&.name

%h2 Notifications

.row
  - @routes.each do |route|
    .col
      %h3= route.title
      = render 'notifications', route: route
