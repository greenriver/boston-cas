= simple_form_for [:admin, @user], url: confirm_admin_user_path, method: :post do |f|
  = f.error_notification
  .form-inputs
    = f.simple_fields_for :contact do |contact_fields|
      = contact_fields.input :first_name, required: true
      = contact_fields.input :last_name, required: true
      = contact_fields.input :phone, as: :tel
      = contact_fields.input :email, as: :email, required: true
      = f.input :agency_id, collection: @agencies, label_method: :name, value_method: :id, required: true, input_html: {class: [:select2, :jManualSelect2] }
    .row
      .col-md-6
        .form--checkbox-groups
          %h3 CAS Roles for Access Permissions
          = f.association :roles, as: :check_boxes, label_method: :role_name, collection: Role.available_roles
        .form--checkbox-groups
          %h3 Additional Options
          = f.input :receive_initial_notification
    .row
      .col-md-12
        = render 'requirement_manager/form_fields', form: f, selected_requirements_heading: "Grant access to full client records that meet the following rules", hide_inherited: true
  .form-actions
    = f.button :submit, class: 'btn btn-primary'

-# When we've connected contacts to user accounts, this would be a good roll-up place to show the contact relationships
-# - unless @user.new_record?
-#   = render 'contact_relationships'

= content_for :page_js do
  :javascript
    $('.jManualSelect2').select2();