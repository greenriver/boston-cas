- sort_options = ClientOpportunityMatch.sort_options
.d-flex.justify-content-end
  - if can_add_vacancies?
    = link_to new_opportunity_path, class: 'btn btn-primary pull-right margin-bottom-02' do
      %span.icon-plus
      Submit a Vacancy

- if show_match_status_facet_nav?
  %ul.nav.nav-tabs
    %li.nav-item{role: "presentation", class: ('active' if controller_path == 'active_matches')}
      = link_to 'Matches in Progress', active_matches_path, class: 'nav-link'
    %li.nav-item{role: "presentation", class: ('active' if controller_path == 'closed_matches')}
      = link_to 'Closed Matches', closed_matches_path, class: 'nav-link'

.row
  .col-sm-12
    %h1= @heading
    = render 'help_text'
  - @prompt = t '.search_prompt'
.row.o-search
  .col-sm-4.o-search__input-wrapper
    = render 'search_form', tooltip: 'Search with PersonalID or full or partial "first last" or "last, first" for more specific results'
  .col-sm-8.sort-filter.o-search__actions
    = render 'filter', available_steps: ClientOpportunityMatch.closed_filter_options, return_path: closed_matches_path, label_method: :closed, available_routes: @available_routes
    = render 'sort', sort_options: sort_options
    = render 'show_confidential_names'

= render 'tabs', available_routes: @available_routes, current_tab: @current_route_name
.row
  .col-sm-4
    %p= page_entries_info @opportunities
  .col-sm-4
    %p.client__current-sort-filter
      Currently sorted by:
      %strong= sort_options.select{|m| m[:column] == @column && m[:direction] == @direction}.first.try(:[], :title)
  .col-sm-4
    - if @current_step.present? || @current_program.present?
      - step_name = if @current_step.present? then ClientOpportunityMatch.closed_filter_options.to_h.invert[@current_step] else nil end
      - program_name = if @current_program.present? then @available_programs.index_by(&:id)[@current_program.to_i]&.name else nil end
      - limits = [step_name, program_name].compact
      %p.client__current-sort-filter
        Limited to:
        %strong= limits.join(' at ')

%p= paginate @opportunities, params: {sort: @column, direction: @direction}
= render 'matches/list', opportunities: @opportunities, match_type: 'closed'
%p= paginate @opportunities, params: {sort: @column, direction: @direction}
