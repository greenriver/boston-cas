.o-page__title
  %h1= t '.title'
%p Contacts are now managed through their associated user accounts.
- @prompt = t '.search_prompt'
.row
  .col-sm-4
    = render 'search_form'
:ruby
  columns = ['last_name', 'first_name', 'email', 'phone']
  directions = current_sort_order(Hash[columns.map {|x| [x, nil]}])
  titles = {}
  directions.each {| k,v | titles[k] = @contacts.human_attribute_name(k)}

%p= page_entries_info @contacts

.table-responsive
  .c-card.c.card__flush.mb-4
    .c-card__content.p-0
      %table.table.table-striped.mb-0
        %thead
          %tr
            - titles.each do | k, title |
              %th
                = manual_sort_link(titles[k], k, directions)
                %i{:class => ["fa", "fa-sort-#{directions[k]}"] }
            %th.text-center Active Matches
            %th.text-center Closed Matches
        %tbody
          - @contacts.each do |c|
            - user = c.user
            %tr
              %td
                - if user && can_edit_users?
                  = link_to c.last_name, edit_admin_user_path(user)
                - else
                  %i.icon-warning.mr-2{data: { toggle: :tooltip, title: 'No associated user' }}
                  = c.last_name
              %td
                - if user && can_edit_users?
                  = link_to c.first_name, edit_admin_user_path(user)
                - else
                  = c.first_name
              %td= mail_to c.email, nil, target: '_blank'
              %td= c.phone
              - active_match_count = @active_matches[c.id] || 0
              %td.text-center= link_to_if active_match_count.positive?, active_match_count, move_matches_contact_path(c)
              %td.text-center= @closed_matches[c.id] || 0

  %p= paginate @contacts
