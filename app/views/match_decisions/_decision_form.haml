= simple_form_for @decision, url: access_context.match_decision_path(@match, @decision) do |form|
  .row
    .col-md-6
      = form.input :note, as: :text, input_html: {rows: 4, disabled: (!@decision.editable?)}
  .o-choose.o-choose--flush
    .o-choose__choice{class: ('o-choose__choice--disabled' if !@decision.editable?)}
      %header
        .o-choose__title
          .c-choice-icon.c-choice-icon--confirm.mr-4
          %h3 Accept Match
      .o-choose__content
        %label
          Expire Match
          %span.label-helper.label-helper--optional optional
        %p Optionally provide a date after which the match will be expired if it hasn't been accepted by a #{_('Shelter Agency')} contact
        .row
          .col-md-6
            = form.input :shelter_expiration, as: :date_picker, label: false, input_html: {class: 'jButtonStateTriggers', value: @match.shelter_expiration.presence || @decision.default_shelter_expiration}
        .form-actions.clearfix
          - @decision.errors[:status].each do |error_message|
            %p.error-block= error_message
          - if ! @match.client.has_full_housing_release?
            .alert.alert-danger
              = link_to @match.client.full_name, client_path(@match.client)
              Does not have a full housing release on file.
        .form-actions
          %button{class: 'btn btn-success jAccept', data: {submit_param_name: 'decision[status]', submit_param_value: 'accepted'}, disabled: (!@decision.editable?)}
            %i.icon-checkmark
            Accept Match

    - if can_reject_matches?
      = render 'match_decisions/decline_and_cancel_actions', form: form
