.row
  .col-xs-12
    .match-decision
      .button-row
        %label.display-block * Add / Review Contacts for Match
        %div.hint.margin-bottom-01 This step is required
        = link_to edit_match_contacts_path(@match), class: 'btn btn-primary', data: {loads_in_pjax_modal: true} do
          %span.icon-plus
          Review Contacts for Match
        - if @decision.errors[:match_contacts].present?
          .requirement-warning
            %span.icon-warning
            = @decision.errors.full_messages_for(:match_contacts).join ". "
      .button-row
        = link_to 'View Alternate Clients Matched to this Opportunity', opportunity_alternate_matches_path(@match.opportunity), target: '_blank'
      = simple_form_for @decision, url: access_context.match_decision_path(@match, @decision) do |form|
        = form.input :note, as: :text, input_html: {rows: 4, disabled: (!@decision.editable?)}
        %label= "Optionally provide a date after which the match will be expired if it hasn't been accepted by a #{_('Shelter Agency')} contact"
        .row
          .col-sm-6
            %h3 Accept Match Recommendation
            %label Optionally provide a date after which the match will be expired if it hasn't been accepted by a shelter agency contact
            = form.input :shelter_expiration, as: :date_picker, label: false, input_html: {class: 'jButtonStateTriggers'}
            .form-actions.clearfix
              - @decision.errors[:status].each do |error_message|
                %p.error-block= error_message
              - if ! @match.client.has_full_housing_release?
                .alert.alert-danger
                  = link_to @match.client.full_name, client_path(@match.client)
                  Does not have a full housing release on file.
            = form.submit 'Accept Match Recommendation', class: 'btn btn-primary jAccept', data: {submit_param_name: 'decision[status]', submit_param_value: 'accepted'}, disabled: (!@decision.editable?)
          .col-sm-6
            %h3 Reject Match Recommendation
            = render 'match_decisions/decline_reason', form: form
            - if can_reject_matches?
              .well
                = render 'match_decisions/park_client', form: form
            = form.submit 'Decline Match', class: 'btn btn-secondary jDecline', data: {submit_param_name: 'decision[status]', submit_param_value: 'declined'}, disabled: (!@decision.editable?)
          

          = content_for :page_js do
            :javascript
              function update_button_states(e) {
                var current_target_id = $(e.currentTarget).attr('id');
                
                var shelter_expiration_present = $('#decision_shelter_expiration').val() != '';
                if(shelter_expiration_present) {
                  $('.jAccept').prop('disabled', false);
                  $('.jDecline').prop('disabled', true);
                  $('.jButtonStateTriggers').not('#' + current_target_id).val('');
                }
                
                var prevent_matching_present = $('#decision_prevent_matching_until').val() != '';
                if(prevent_matching_present) {
                  $('.jAccept').prop('disabled', true);
                  $('.jDecline').prop('disabled', false);
                  $('.jButtonStateTriggers').not('#' + current_target_id).val('');          
                }
                
                if(! shelter_expiration_present && ! prevent_matching_present) {
                  $('.jAccept').removeAttr('disabled');
                  $('.jDecline').removeAttr('disabled');
                }
              }

              $('.jButtonStateTriggers').on("change", update_button_states);
              $('.jButtonStateTriggers').trigger('change');
          
              
