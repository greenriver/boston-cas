- match_route = match.match_route
- types = match_step_types[match_route.class.name]
- match_decisions = match.decisions.order(id: :asc).where(type: types&.keys).to_a
- # remove any skipped decisions
- skipped_names = match_decisions.select(&:skipped?).map { |m| m.class.name }
- match_decisions.reject!(&:skipped?)
- types.reject! { |class_name, _| class_name.in?(skipped_names) }
- i = 0
- types.transform_values! { |v| i += 1 }
- size ||= 'lg'
- small_class = 'c-stepped-progress--sm'

.d-flex
  %ol.c-stepped-progress{"step-count" => "#{match_decisions.count}", class: "#{small_class if size == 'sm'} route-#{match_route.class.name.parameterize}"}
    - match_decisions.each do |decision|
      - decision_status = decision.incomplete_active_done?
      - next_decision = match_decisions.detect{|md| md.type == types.keys[types.keys.index(decision.type) + 1]}
      - final = types[decision.type].to_i == types.length.to_i
      -# if a step is canceled, but the next step has a status
      - if decision_status == :canceled && (next_decision.present? && next_decision.status.present?)
        - decision_status = :done
      %li{class: "c-stepped-progress__step c-stepped-progress__step--#{decision_status} #{ 'c-stepped-progress__step--final' if final}"}
        .sr-only
          = decision.step_name
        - if size == 'sm'
          - link = '#'
          - if can_reject_matches? || match.on_or_after_first_client_step?
            - link = match_path(match)
          = link_to link, class: 'c-stepped-progress__step-link', data: {toggle: :tooltip, title: decision.step_name} do
            .c-stepped-progress__step-number= types[decision.type]
        - else
          .c-stepped-progress__step-link--static{data: {toggle: :tooltip, title: decision.step_name}}
            .c-stepped-progress__step-number= types[decision.type]
