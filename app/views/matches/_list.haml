- opportunities.each do |opportunity|
  - if @match_state == :closed_matches
    - matches = opportunity.send(@match_state).where(id: @matches.select(:id))
  - else
    - matches = opportunity.send(@match_state)
  - sub_program = opportunity.sub_program
  - program = sub_program.program
  - unit = opportunity.unit
  - building = unit&.building
  - voucher = opportunity.voucher
  - max_updated_at = (opportunity.send(@match_state)&.map(&:updated_at) + opportunity.send(@match_state).map(&:current_decision).compact.map(&:updated_at)).compact.max
  .clients__client-card.clients__client.c-card
    .row
      .col-3
        %dl.inline
          %dt Program:
          %dd
            = link_to program.name, edit_program_sub_program_program_details_path(program_id: program, sub_program_id: sub_program)
            %br
            %em
              = link_to sub_program.name, edit_program_sub_program_path(program_id: program, id: sub_program)
            .text-muted
              = sub_program.program_type_label

        - if building && unit
          %dl.inline
            %dt Unit & Building:
            %dd
              = unit.name
              %br
              = building.name
        - if MatchRoutes::Base.more_than_one?
          %ul.list-unstyled
            %li
              %dl.inline
                %dt Match Route:
                %dd.feature= opportunity.match_route&.title
        %dl.inline
          %dt Available Since:
          %dd= voucher.made_available_at.try(:strftime, I18n.t('date.formats.default')) || 'unknown'
        - if can_reject_matches? || matches.map(&:past_first_step_or_all_steps_visible?).any?
          - if match_type != 'opportunity' && opportunity.show_alternate_clients_to?(current_user)
            = link_to opportunity_matches_path(opportunity) do
              Prioritized Clients
      .col-9.mt-5
        - matches.each do |match|
          - updated_at = if match_type == 'active' then match.current_decision&.updated_at else match.updated_at end
          - hide_client_name = (match.confidential? || match.client.match_for_opportunity(match.opportunity).try(:confidential?)) && ! show_confidential_names?
          - active_in_other_match_class = ''
          - next if match.client.blank?
          - if match.active? && match.client.active_in_match? && match.client.match_for_opportunity(match.opportunity) != match
            - active_in_other_match_class = 'clients__client-card--flagged'
          .match-step-status.mb-4
            .row.client__match.mb-4{data: {id: match.client.id}, class: active_in_other_match_class}
              .col-3
                .text-lg-right
                  %strong.clients__client-name
                    - if match.client.accessible_by_user? current_user
                      = link_to match.client_name_for_contact(current_contact, hidden: hide_client_name), client_path(match.client)
                    - else
                      = match.client_name_for_contact current_contact, hidden: hide_client_name
              .col-9
                %ul.d-flex.list-unstyled.align-items-center.mb-0
                  %li
                    %dl
                      %dt.text-nowrap Initial Match Date
                      %dd= match.created_at.try(:strftime, I18n.t('date.formats.default'))
                  %li.ml-6.mr-6
                    = render 'match_list_base/current_step', match: match, size: 'sm'
                  - unless match_type == 'opportunity'
                    %li
                      %dl
                        %dt.text-nowrap Last Updated
                        %dd
                          - updated_at = match.current_decision&.updated_at
                          - if match_type == 'active'
                            = updated_at&.to_date&.strftime(I18n.t('date.formats.default'))
                          - else
                            = max_updated_at&.to_date&.strftime(I18n.t('date.formats.default'))
                = render 'matches/warnings', match: match

              .col.client__details.flex-column.d-flex.justify-content-start.align-items-end.ml-auto
                - if can_reject_matches? || match&.past_first_step_or_all_steps_visible?
                  = link_to 'View Match', match_path(match), class: 'btn btn-light mb-2'
                - else
                  This match is not currently available.