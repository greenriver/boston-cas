- pathways_assessment = Config.get(:identified_client_assessment).include?('Pathways')
.c-card.c-card-flush
  .c-card__content
    = simple_form_for :checkboxes do |f|
      .row
        .col-sm-8
          %p #{pluralize(@matches.count, 'matching client')}
        .col-sm-4.text-right
          - if @opportunity.match_route.allow_multiple_active_matches && can_activate_matches?
            .mb-4= f.button :submit, value: 'Activate Matches'
      %table.table.table-striped
        %thead
          %tr
            %th Client Name
            %th Assessment Type
            %th Minimum Bedrooms
            - unless pathways_assessment
              %th Minimum Occupancy
            - priority_labels.map do |label|
              %th.text-center= label
            %th.text-center Other Active Matches
            - if can_activate_matches?
              %th.text-center Activate Match?
            - else
              %th
        %tbody
          - @matches.each do |client|
            - match = client.match_for_opportunity(@opportunity)
            - confidential_opportunity = @opportunity.confidential? && ! client.has_full_housing_release?(@opportunity&.match_route)
            - confidential_client = client.confidential? || match.try(:confidential?)
            - hide_client_name = ( confidential_client || confidential_opportunity) && ! show_confidential_names?
            - name = match&.client_name_for_contact(current_user.contact, hidden: hide_client_name) || client.client_name_for_user(current_user, hidden: hide_client_name)

            %tr{class: active_client_ids.include?(client.id) ? 'client--match-active' : ''}
              %td
                = link_to_if client.accessible_by_user?(current_user), name, client_path(client)
              %td= NonHmisAssessment.declassify_title(NonHmisAssessment.title_from_type_for_matching(client.assessment_name))
              %td
                = client.required_number_of_bedrooms
                - if client.sro_ok
                  (SRO OK)
              - unless pathways_assessment
                %td= client.required_minimum_occupancy
              - priority_values(client).map do |value|
                - isBoolean = [TrueClass, FalseClass].include?(value.class)
                %td.text-center= isBoolean ? checkmark(value) : value
              %td.text-center
                = render 'client_match_routes', client: client

              - if active_client_ids.include?(client.id)
                %td.text-center= link_to 'Current Active Match', match_path(match)
              -else
                - if can_activate_matches?
                  - unless @opportunity.match_route.allow_multiple_active_matches
                    = render 'activate_button', client: client
                  - else
                    = render 'activate_checkbox', client: client, f: f
                - else
                  %td

      - # %p=paginate @matches
      - if @opportunity.match_route.allow_multiple_active_matches && can_activate_matches?
        .float-right= f.button :submit, value: 'Activate Matches'
