
.row
  .col-sm-12
    %h1 CAS Rules List
    %p
      = "These rules are available to apply (\"must\" or \"can't\") when editing a funding source, sub-grantee, subcontractor, #{Building.model_name.human.downcase}, service, or program."
      %br
      = "For now, if #{Translation.translate('DND')} needs to change wording or add a rule, please email Green River."

.table-responsive
  .c-card.c.card__flush.mb-4
    .c-card__content.p-0
      %table.table.table-striped.mb-0
        %thead
          %tr
            %th Verb
            %th Rule
            %th Applies to all matches?
            %th In-use in
        %tbody
          - @rules.each do |rule|
            %tr
              - attributes = {:class => rule.deleted_at.present? ? 'deleted' : nil}
              %td{attributes}= rule.verb.try :titleize
              %td{attributes}= Translation.translate(rule.name)
              %td{attributes}
                - if rule.always_apply?
                  Always Apply
              %td{attributes}
                = rule.requirements.map(&:requirer).select(&:present?).map(&:name)&.join('<br />')&.html_safe

              -# %td
              -#   - if !rule.deleted_at
              -#     = link_to rule_path(rule), method: :delete, data: {confirm: "Would you really like to delete the rule: #{rule.name}?"} do
              -#       %span.icon-cross
              -#       Delete
              -#   - else
              -#     = link_to 'Restore', restore_rule_path(rule.id), method: :post
    %p= paginate @rules
