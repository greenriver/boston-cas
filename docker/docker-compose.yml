version: '3.8'

x-app: &app
  image: cas:${TARGET:-dev-build}-0.0.3
  build:
    context: .
    target: ${TARGET:-dev-build}
    dockerfile: docker/app/Dockerfile
    args:
      BUILD_TAG: 3.1.4-alpine3.18
      PG_MAJOR: '12'
      NODE_MAJOR: '12'
      YARN_VERSION: '1.17.3'
      BUNDLER_VERSION: '2.4.14'
      USER_ID: ${USER_ID:-10000}
      GROUP_ID: ${GROUP_ID:-10000}
  environment: &env
    AWS_REGION: ${AWS_REGION:-us-east-1}
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
    AWS_SECURITY_TOKEN: ${AWS_SECURITY_TOKEN:-}
    AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN:-}
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
    REDIS_URL: redis://redis:6379/
    BOOTSNAP_CACHE_DIR: /bundle/bootsnap
    WEB_CONCURRENCY: 1
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    BUNDLE_FORCE_RUBY_PLATFORM: 'true'
    CHROMEDRIVER_VERSION: 79.0.3945.36
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/bundle

services:
  shell:
    <<: *backend
    profiles:
      - manual
    command: /bin/bash
    entrypoint: ''
    depends_on:
      - db
      - redis

  spec:
    <<: *backend
    profiles:
      - manual
    command: /bin/bash
    entrypoint: ''
    depends_on:
      - db
      - redis
    env_file:
      - .env.local
      - .env.test

  console:
    <<: *backend
    profiles:
      - manual
    stdin_open: true
    tty: true
    command: bundle exec rails console
    depends_on:
      - db
      - redis

  dj:
    <<: *backend
    command: ./bin/rake jobs:work
    entrypoint: ''
    depends_on:
      - db
      - redis

  web:
    <<: *backend
    stdin_open: true
    tty: true
    command: bundle exec rails server -b 0.0.0.0
    labels:
      - traefik.enable=${TRAEFIK_ENABLED:-false}
      - traefik.http.routers.cas.entrypoints=web
      - traefik.http.routers.cas.rule=Host(`${FQDN:-boston-cas.dev.test}`)
      - traefik.http.services.cas_https.loadbalancer.server.port=3000
      - traefik.http.routers.cas_https.rule=Host(`${FQDN:-boston-cas.dev.test}`)
      - traefik.http.routers.cas_https.tls=true
      - traefik.http.routers.cas_https.entrypoints=web-secure
      - traefik.http.middlewares.cas_https.redirectscheme.scheme=https
      - traefik.http.routers.cas.middlewares=cas_https
    expose:
      - 3000
    environment:
      <<: *env
      VIRTUAL_HOST: ${FQDN:-boston-cas.dev.test}
      VIRTUAL_PORT: 3000
    depends_on:
      - db
      - redis

  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      PSQL_HISTFILE: /root/log/.psql_history
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - 5432

  redis:
    image: redis:alpine
    volumes:
      - redis:/data
    ports:
      - 6379

secrets:
  host_ssh_key:
    file: ~/.ssh/id_rsa

volumes:
  dbdata:
  redis:
  bundle:
  node_modules:
  rails_cache:

networks:
  default:
    name: traefik
    external: true
